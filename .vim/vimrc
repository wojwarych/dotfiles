let $RTP=split(&runtimepath, ',')[0]
let $RC="$HOME/.vim/vimrc"

set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'mbbill/undotree'
Plugin 'dense-analysis/ale'
Plugin 'tomasr/molokai'
Plugin 'vim-python/python-syntax'
Plugin 'fatih/vim-go'
Plugin 'pangloss/vim-javascript'
Plugin 'MaxMEllon/vim-jsx-pretty'
call vundle#end()

function! GitBranch()
    return system("git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'")
endfunction

function! StatusLineGit()
    let l:branchname = GitBranch()
    return strlen(l:branchname) > 0?' '.l:branchname.' ':''
endfunction

fun! StripTrailingWhitespaces()
    let l:save = winsaveview()
    keeppatterns %s/\s\+$//e
    call winrestview(l:save)
endfun

filetype plugin indent on
syntax on
syntax enable
let mapleader=" "
set path+=**
set relativenumber
set wildmenu
set noerrorbells
set backspace=indent,eol,start
set hidden
set noswapfile
set nu
set nowrap
set smartcase
set incsearch
set hlsearch
set lazyredraw
set nobackup
set undodir=~/.vim/undodir
set undofile
set ffs=unix,dos,mac
set laststatus=2
set statusline=
set statusline+=%#PmenuSel#
set statusline+=%{StatusLineGit()}
set statusline+=%#LineNr#
set statusline+=\ %f
set statusline+=%m\
set statusline+=%=
set statusline+=%#CursorColumn#
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\[%{&fileformat}\]
set statusline+=\ %p%%
set statusline+=\ %l:%c
set statusline+=\
set splitright
set splitbelow
set termwinkey=<C-A>
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
autocmd Syntax * syn match ExtraWhitespace /\s\+$\| \+\ze\t/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()
highlight ColorColumn ctermbg=0 guibg=lightgrey
let g:rehash256 = 1
let g:python_highlight_all = 1
colorscheme molokai

let g:netrw_banner=0
let g:netrw_winsize=25
let g:netrw_list_hide= '.git/,.pytest_cache/,__pycache__/'

nnoremap <C-K> <C-W>k
nnoremap <C-J> <C-W>j
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap j gj
nnoremap k gk
nnoremap <leader><leader> :tab term<CR>
nnoremap <F5> :buffers<CR>:buffer<Space>

autocmd FileType python,html,sh,yaml autocmd BufWritePre * :call StripTrailingWhitespaces()
